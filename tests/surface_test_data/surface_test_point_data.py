# -*- coding: utf-8 -*-

import numpy as np

data = {
    'Plane': [
        (
            ([1, 0, 0], 0),
            [
             ([1, 0, 0], [+1]), ([-1, 0, 0], [-1]), ([1, 0, 0], [+1]),
             ([-1, 0, 0], [-1]), ([0.1, 0, 0], [+1]), ([-0.1, 0, 0], [-1]),
             ([1.e-6, 100, -300], [+1]), ([-1.e-6, 200, -500], [-1]),
             (np.array([[1, 0, 0], [-1, 0, 0], [0.1, 0, 0], [-0.1, 0, 0],
                        [1.e-6, 100, -300],
                        [-1.e-6, 200, -500]]), np.array([1, -1, 1, -1, 1, -1]))
            ]
        )
    ],
    'Sphere': [
        (
            ([1, 2, 3], 5),
            [
             (np.array([1, 2, 3]), [-1]), (np.array([5.999, 2, 3]), [-1]),
             (np.array([6.001, 2, 3]), [+1]), (np.array([1, 6.999, 3]), [-1]),
             (np.array([1, 7.001, 3]), [+1]), (np.array([1, 2, 7.999]), [-1]),
             (np.array([1, 2, 8.001]), [+1]), (np.array([-3.999, 2, 3]), [-1]),
             (np.array([-4.001, 2, 3]), [+1]), (np.array([1, 2.999, 3]), [-1]),
             (np.array([1, -3.001, 3]), [+1]), (np.array([1, 2, -1.999]), [-1]),
             (np.array([1, 2, -2.001]), [+1]),
             (np.array([[1, 2, 3], [5.999, 2, 3], [6.001, 2, 3], [1, 6.999, 3],
                        [1, 7.001, 3], [1, 2, 7.999], [1, 2, 8.001],
                        [-3.999, 2, 3],
                        [-4.001, 2, 3], [1, 2.999, 3], [1, -3.001, 3],
                        [1, 2, -1.999],
                        [1, 2, -2.001]]),
              np.array([-1, -1, +1, -1, +1, -1, +1, -1, +1, -1, +1, -1, +1]))
            ]
        )
    ],
    'Cylinder': [
        (
           ([-1, 3, 4], [1, 0, 0], 2),
           [
            ([0, 3, 4], [-1]), ([-2, 3, 2.001], [-1]), ([-3, 3, 1.999], [+1]),
            ([2, 3, 5.999], [-1]), ([3, 3, 6.001], [+1]), ([4, 1.001, 4], [-1]),
            ([-4, 0.999, 4], [+1]), ([-5, 4.999, 4], [-1]), ([5, 5.001, 4], [+1]),
            (np.array([[0, 3, 4], [-2, 3, 2.001], [-3, 3, 1.999], [2, 3, 5.999],
                       [3, 3, 6.001], [4, 1.001, 4], [-4, 0.999, 4],
                       [-5, 4.999, 4],
                       [5, 5.001, 4]]), [-1, -1, +1, -1, +1, -1, +1, -1, +1])
           ]
        )
    ],
    'Cone': [
        (
            ([-3, 1, 2], [1, 0, 0], 1 / np.sqrt(3)),
            [
             ([0, 1, 2], [-1]), ([0, 1, 0.3], [-1]), ([0, 1, 0.2], [+1]),
             ([0, 1, 3.7], [-1]), ([0, 1, 3.8], [+1]), ([0, 2.7, 2], [-1]),
             ([0, 2.8, 2], [+1]), ([0, -0.7, 2], [-1]), ([0, -0.8, 2], [+1]),
             ([-6, 1, 0.3], [-1]), ([-6, 1, 0.2], [+1]), ([-6, 1, 3.7], [-1]),
             ([-6, 1, 3.8], [+1]), ([-6, 2.7, 2], [-1]), ([-6, 2.8, 2], [+1]),
             ([-6, -0.7, 2], [-1]), ([-6, -0.8, 2], [+1]), ([3, 1, -1.4], [-1]),
             ([3, 1, -1.5], [+1]), ([3, 1, 5.4], [-1]), ([3, 1, 5.5], [+1]),
             ([3, 4.4, 2], [-1]), ([3, 4.5, 2], [+1]), ([3, -2.4, 2], [-1]),
             ([3, -2.5, 2], [+1]),
             (np.array([[0, 1, 2], [0, 1, 0.3], [0, 1, 0.2], [0, 1, 3.7],
                        [0, 1, 3.8], [0, 2.7, 2], [0, 2.8, 2], [0, -0.7, 2],
                        [0, -0.8, 2], [-6, 1, 0.3], [-6, 1, 0.2], [-6, 1, 3.7],
                        [-6, 1, 3.8], [-6, 2.7, 2], [-6, 2.8, 2], [-6, -0.7, 2],
                        [-6, -0.8, 2], [3, 1, -1.4], [3, 1, -1.5], [3, 1, 5.4],
                        [3, 1, 5.5], [3, 4.4, 2], [3, 4.5, 2], [3, -2.4, 2],
                        [3, -2.5, 2]]),
              [-1, -1, +1, -1, +1, -1, +1, -1, +1, -1, +1, -1, +1, -1, +1, -1,
               +1, -1, +1, -1, +1, -1, +1, -1, +1])
            ]
        )
    ],
    'Torus': [
        (
            ([0, 0, 0], [1, 0, 0], 4, 2, 1),
            [
             ([0, 0, 0], [1]), ([0, 0, 2.99], [1]), ([0, 0, 5.01], [1]),
             ([0, 0, 3.01], [-1]), ([0, 0, 4.99], [-1]), ([0, 2.99, 0], [1]),
             ([0, 5.01, 0], [1]), ([0, 3.01, 0], [-1]), ([0, 4.99, 0], [-1]),
             ([2.01, 0, 4], [1]), ([1.99, 0, 4], [-1]), ([2.01, 4, 0], [1]),
             ([1.99, 4, 0], [-1]),
             (np.array([[0, 0, 0], [0, 0, 2.99], [0, 0, 5.01], [0, 0, 3.01],
                        [0, 0, 4.99], [0, 2.99, 0], [0, 5.01, 0], [0, 3.01, 0],
                        [0, 4.99, 0], [2.01, 0, 4], [1.99, 0, 4], [2.01, 4, 0],
                        [1.99, 4, 0]]),
              [1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1])
            ]
        ),
        (
            ([0, 0, 0], [1, 0, 0], -1, 1, 2),
            [
                ([0, 0, 0], [-1]), ([0, 0.999, 0], [-1]), ([0, 1.001, 0], [+1]),
                ([0, 2.999, 0], [+1]), ([0, 3.001, 0], [+1])
            ]
        ),
        (
            ([0, 0, 0], [1, 0, 0], 1, 1, 2),
            [
                ([0, 0, 0], [-1]), ([0, 0.999, 0], [-1]), ([0, 1.001, 0], [-1]),
                ([0, 2.999, 0], [-1]), ([0, 3.001, 0], [+1])
            ]
        )
    ],
    'GQuadratic': [
        (
            (np.diag([1, 1, 1]), [0, 0, 0], -1),
            [
             (np.array([0, 0, 0]), [-1]), (np.array([-0.999, 0, 0]), [-1]),
             (np.array([0.999, 0, 0]), [-1]), (np.array([-1.001, 0, 0]), [+1]),
             (np.array([1.001, 0, 0]), [+1]), (np.array([0, 0.999, 0]), [-1]),
             (np.array([0, 1.001, 0]), [+1]), (np.array([0, 0, -0.999]), [-1]),
             (np.array([[0, 0, 0], [-0.999, 0, 0], [0.999, 0, 0], [-1.001, 0, 0],
                        [1.001, 0, 0], [0, 0.999, 0], [0, 1.001, 0],
                        [0, 0, -0.999]]),
              np.array([-1, -1, -1, 1, 1, -1, 1, -1]))
            ]
        )
    ]
}
