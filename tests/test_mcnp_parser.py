import pytest
import numpy as np

from mckit.parser.mcnp_input_parser import mcnp_input_lexer, mcnp_input_parser
from mckit.parser.meshtal_parser import meshtal_lexer, meshtal_parser


@pytest.mark.parametrize('lex_file, expected', [
    ('tests/parser_test_data/lex1.txt', [
        ('title', 'Title card', 1), ('separator', '\n', 1),
        ('int_number', 1, 2), ('int_number', 1, 2), ('-', '-', 2),
        ('flt_number', 1.0, 2), ('int_number', 1, 2), ('int_number', 2, 2),
        ('+', '+', 2), ('int_number', 3, 2), ('IMP', 'IMP', 2), (':', ':', 2),
        ('N', 'N', 2), ('int_number', 1, 2), ('separator', '\n', 2),
        ('int_number', 2, 3), ('void_material', '0', 3), ('int_number', 1, 3),
        ('-', '-', 3), ('int_number', 2, 3), ('int_number', 3, 3),
        ('IMP', 'IMP', 3), (':', ':', 3), ('P', 'P', 3), ('int_number', 0, 3),
        ('separator', '\n', 3),
        ('int_number', 3, 4), ('void_material', '0', 5), ('int_number', 1, 5),
        ('int_number', 2, 5), ('int_number', 3, 5), ('int_number', 4, 6),
        ('int_number', 5, 6), ('separator', '\n', 6),
        ('int_number', 4, 7), ('int_number', 2, 7), ('-', '-', 7),
        ('int_number', 5, 7), ('int_number', 1, 7), ('VOL', 'VOL', 8),
        ('int_number', 1, 8), ('separator', '\n', 8),
        ('int_number', 5, 9), ('void_material', '0', 9), ('-', '-', 9),
        ('int_number', 1, 9), ('int_number', 2, 9), ('blank_line', '\n', 9),
        ('int_number', 1, 11), ('surface_type', 'PX', 11), ('-', '-', 11),
        ('flt_number', 1.0, 11), ('separator', '\n', 11),
        ('int_number', 2, 12), ('surface_type', 'C/Y', 12),
        ('flt_number', 2.e-2, 12), ('-', '-', 12), ('flt_number', 0.3, 12),
        ('flt_number', 400, 12), ('blank_line', '\n', 12),
        ('MODE', 'MODE', 14), ('N', 'N', 14), ('separator', '\n', 14),
        ('VOL', 'VOL', 15), ('int_number', 1, 15), ('int_number', 2, 15),
        ('blank_line', '\n', 15)
    ]),
    ('tests/parser_test_data/lex2.txt', [
        ('title', 'Title card', 1), ('separator', '\n', 3),
        ('int_number', 1, 4), ('int_number', 1, 4), ('-', '-', 4),
        ('flt_number', 1.0, 4), ('int_number', 1, 4), ('int_number', 2, 4),
        ('+', '+', 4), ('int_number', 3, 4), ('IMP', 'IMP', 4), (':', ':', 4),
        ('N', 'N', 4), ('int_number', 1, 4), ('separator', '\n', 5),
        ('int_number', 2, 6), ('void_material', '0', 6), ('int_number', 1, 6),
        ('-', '-', 6), ('int_number', 2, 6), ('int_number', 3, 9),
        ('IMP', 'IMP', 9), (':', ':', 9), ('P', 'P', 9), ('int_number', 0, 9),
        ('separator', '\n', 9),
        ('int_number', 3, 10), ('void_material', '0', 11), ('int_number', 1, 11),
        ('int_number', 2, 11), ('int_number', 3, 11), ('int_number', 4, 12),
        ('int_number', 5, 12), ('separator', '\n', 12),
        ('int_number', 4, 13), ('int_number', 2, 13), ('-', '-', 13),
        ('int_number', 5, 13), ('int_number', 1, 13), ('VOL', 'VOL', 14),
        ('int_number', 1, 14), ('separator', '\n', 14),
        ('int_number', 5, 15), ('void_material', '0', 15), ('-', '-', 15),
        ('int_number', 1, 15), ('int_number', 2, 15), ('blank_line', '\n', 16),
        ('int_number', 1, 20), ('surface_type', 'PX', 20), ('-', '-', 20),
        ('flt_number', 1.0, 20), ('separator', '\n', 20),
        ('int_number', 2, 21), ('surface_type', 'C/Y', 21),
        ('flt_number', 2.e-2, 21), ('-', '-', 21), ('flt_number', 0.3, 21),
        ('flt_number', 400, 21), ('blank_line', '\n', 21),
        ('MODE', 'MODE', 23), ('N', 'N', 23), ('separator', '\n', 23),
        ('VOL', 'VOL', 24), ('int_number', 1, 24), ('int_number', 2, 24),
        ('separator', '\n', 24),
        ('M', 'M', 25), ('int_number', 1, 25), ('int_number', 1001, 25),
        ('.', '.', 25), ('lib_spec', '50C', 25), ('blank_line', '\n', 26)
    ]),
    ('tests/parser_test_data/lex3.txt', [
        ('title', 'Title card', 1), ('separator', '\n', 3),
        ('int_number', 1, 4), ('int_number', 1, 4), ('-', '-', 4),
        ('flt_number', 1.0, 4), ('int_number', 1, 4), ('int_number', 2, 4),
        ('+', '+', 4), ('int_number', 3, 4), ('IMP', 'IMP', 4), (':', ':', 4),
        ('N', 'N', 4), ('int_number', 1, 4), ('separator', '\n', 5),
        ('int_number', 2, 6), ('void_material', '0', 6), ('int_number', 1, 6),
        ('-', '-', 6), ('int_number', 2, 6), ('int_number', 3, 9),
        ('IMP', 'IMP', 9), (':', ':', 9), ('P', 'P', 9), ('int_number', 0, 9),
        ('separator', '\n', 9),
        ('int_number', 3, 10), ('void_material', '0', 11), ('int_number', 1, 11),
        ('int_number', 2, 11), ('int_number', 3, 11), ('int_number', 4, 12),
        ('int_number', 5, 12), ('separator', '\n', 12),
        ('int_number', 4, 13), ('int_number', 2, 13), ('-', '-', 13),
        ('int_number', 5, 13), ('int_number', 1, 13), ('VOL', 'VOL', 14),
        ('int_number', 1, 14), ('separator', '\n', 14),
        ('int_number', 5, 15), ('void_material', '0', 15), ('-', '-', 15),
        ('int_number', 1, 15), ('int_number', 2, 15), (ValueError, 16, 15)
    ]),
    ('tests/parser_test_data/lex4.txt', [
        ('title', 'Title card', 1), ('separator', '\n', 1),
        ('int_number', 1, 2), ('int_number', 1, 2), ('-', '-', 2),
        ('flt_number', 1.0, 2), ('int_number', 1, 2), ('int_number', 2, 2),
        ('+', '+', 2), ('int_number', 3, 2), ('IMP', 'IMP', 2), (':', ':', 2),
        ('N', 'N', 2), ('int_number', 1, 2), ('separator', '\n', 2),
        ('int_number', 2, 3), ('void_material', '0', 3), ('int_number', 1, 3),
        ('-', '-', 3), ('int_number', 2, 3), ('int_number', 3, 3),
        (ValueError, 3, 17)
    ]),
    ('tests/parser_test_data/lex5.txt', [
        ('title', 'Title card', 1), ('separator', '\n', 1),
        ('int_number', 1, 2), ('int_number', 1, 2), ('-', '-', 2),
        ('flt_number', 1.0, 2), ('int_number', 1, 2), ('int_number', 2, 2),
        ('+', '+', 2), ('int_number', 3, 2), ('IMP', 'IMP', 2), (':', ':', 2),
        ('N', 'N', 2), ('int_number', 1, 2), ('separator', '\n', 2),
        ('int_number', 2, 3), ('void_material', '0', 3), ('int_number', 1, 3),
        ('-', '-', 3), ('int_number', 2, 3), ('int_number', 3, 3),
        ('IMP', 'IMP', 3), (':', ':', 3), ('P', 'P', 3), ('int_number', 0, 3),
        ('separator', '\n', 3),
        ('int_number', 3, 4), ('void_material', '0', 5), ('int_number', 1, 5),
        ('int_number', 2, 5), ('int_number', 3, 5), ('int_number', 4, 6),
        ('int_number', 5, 6), ('separator', '\n', 6),
        ('int_number', 4, 7), ('int_number', 2, 7), ('-', '-', 7),
        ('int_number', 5, 7), ('int_number', 1, 7), ('VOL', 'VOL', 8),
        ('int_number', 1, 8), ('separator', '\n', 8),
        ('int_number', 5, 9), ('void_material', '0', 9), ('-', '-', 9),
        ('int_number', 1, 9), ('int_number', 2, 9), ('blank_line', '\n', 9),
        ('int_number', 1, 11), (ValueError, 11, 3)
    ]),
    ('tests/parser_test_data/lex6.txt', [
        ('title', 'Title card', 1), ('separator', '\n', 1),
        ('int_number', 1, 2), ('int_number', 1, 2), ('-', '-', 2),
        ('flt_number', 1.0, 2), ('int_number', 1, 2), ('int_number', 2, 2),
        ('+', '+', 2), ('int_number', 3, 2), ('IMP', 'IMP', 2), (':', ':', 2),
        ('N', 'N', 2), ('int_number', 1, 2), ('separator', '\n', 2),
        ('int_number', 2, 3), ('void_material', '0', 3), ('int_number', 1, 3),
        ('-', '-', 3), ('int_number', 2, 3), ('int_number', 3, 3),
        ('IMP', 'IMP', 3), (':', ':', 3), ('P', 'P', 3), ('int_number', 0, 3),
        ('separator', '\n', 3),
        ('int_number', 3, 4), ('void_material', '0', 5), ('int_number', 1, 5),
        ('int_number', 2, 5), ('int_number', 3, 5), ('int_number', 4, 6),
        ('int_number', 5, 6), ('separator', '\n', 6),
        ('int_number', 4, 7), ('int_number', 2, 7), ('-', '-', 7),
        ('int_number', 5, 7), ('int_number', 1, 7), ('VOL', 'VOL', 8),
        ('int_number', 1, 8), ('separator', '\n', 8),
        ('int_number', 5, 9), ('void_material', '0', 9), ('-', '-', 9),
        ('int_number', 1, 9), ('int_number', 2, 9), ('blank_line', '\n', 9),
        ('int_number', 1, 11), ('surface_type', 'PX', 11), ('-', '-', 11),
        ('flt_number', 1.0, 11), ('separator', '\n', 11),
        ('int_number', 2, 12), ('surface_type', 'C/Y', 12),
        ('flt_number', 2.e-2, 12), ('-', '-', 12), ('flt_number', 0.3, 12),
        ('flt_number', 400, 12), ('blank_line', '\n', 12),
        ('MODE', 'MODE', 14), ('N', 'N', 14), ('separator', '\n', 14),
        (ValueError, 15, 1)
    ])
])
def test_mcnp_lexer(lex_file, expected):
    with open(lex_file) as f:
        text = f.read()
    mcnp_input_lexer.begin('INITIAL')
    mcnp_input_lexer.input(text)
    for l in expected:
        if isinstance(l[0], str):
            t = mcnp_input_lexer.token()
            assert l[0] == t.type
            assert l[1] == t.value
            assert l[2] == t.lineno
        else:
            with pytest.raises(l[0]) as ex:
                mcnp_input_lexer.token()
            msg, sym, line, column = ex.value.args
            assert l[1] == line
            assert l[2] == column


@pytest.mark.parametrize('parse_file, expected', [
    ('tests/parser_test_data/parser1.txt', {
        'title': 'mcnp parsing test file',
        'cells': {
            1: {
                'geometry': [1, 2, 'C', 'I', 3, 'I'],
                'IMPN': 1, 'MAT': {'composition': 1, 'density': 2.0}, 'name': 1
            },
            2: {
                'geometry': [1, 2, 'C', 3, 4, 'I', 'U', 'I'],
                'VOL': 1, 'MAT': {'composition': 2, 'density': 3.5}, 'name': 2
            },
            3: {
                'geometry': [2, 2, '#', 'I', 1, 'C', 3, 'U', 'C', 'I'],
                'IMPN': 1, 'IMPP': 1, 'name': 3
            },
            4: {
                'reference': 1, 'RHO': -3.0, 'name': 4
            }
        },
        'surfaces': {
            1: {'kind': 'SX', 'params': [4, 5], 'transform': 1, 'name': 1},
            2: {'kind': 'PX', 'params': [1], 'modifier': '*', 'name': 2},
            3: {'kind': 'S', 'params': [1, 2, -3, 4], 'name':3},
            4: {'kind': 'PY', 'params': [-5], 'name': 4}
        },
        'data': {
            'MODE': ['N', 'P'],
            'M': {
                1: {'atomic': [(1001, {}, 0.1), (1002, {}, 0.9)], 'name': 1},
                2: {'weight': [(6012, {'lib': '50C'}, 0.5),
                               (8016, {'lib': '21C'}, 0.5)], 'name': 2},
                3: {'atomic': [(1001, {}, 0.1), (1002, {}, 0.9)], 'GAS': 1,
                    'name': 3},
                4: {'atomic': [(1001, {}, 0.1)], 'weight': [(1002, {}, 0.9)],
                    'GAS': 1, 'NLIB': '50C', 'name': 4}
            },
            'TR': {
                1: {'translation': [1, 2, 3], 'name': 1}
            }
        }
    }),
    ('tests/parser_test_data/parser2.txt', {
        'title': 'mcnp parsing test file 2',
        'cells': {
            1: {
                'geometry': [1, 'C', 2, 'I', 3, 'C', 'U'],
                'MAT': {'composition': 1, 'density': 0.5}, 'IMPN': 1, 'name': 1
            },
            2: {
                'geometry': [1, 2, 'C', 3, 4, 'I', 5, 6, 'C', 'U', 'I', 'U', 'I',
                             7, 'U'],
                'MAT': {'composition': 2, 'concentration': 1.0e+24}, 'U': 1,
                'IMPN': 2, 'TRCL': 1, 'name': 2
            },
            3: {'geometry': [8, 9, 'I', 10, 'C', 'I'], 'FILL': {'universe': 1},
                'name': 3},
            4: {
                'geometry': [10, 11, 'C', 'I', 12, 'I'], 'name': 4,
                'TRCL': {'translation': [1, 2, 3],
                         'rotation': [30, 60, 90, 120, 30, 90, 90, 90, 0]}
            },
            5: {
                'reference': 3, 'name': 5,
                'TRCL': {'translation': [1, 2, 3], 'indegrees': True,
                         'rotation': [30, 60, 90, 120, 30, 90, 90, 90, 0]}
            },
            6: {
                'geometry': [16, 17, 'C', 'I', 18, 'I'],
                'FILL': {'universe': 1, 'transform': 2}, 'name': 6,
                'comment': ('comment 1', 'comment 2', 'comment 3')
            },
            7: {
                'geometry': [19, 20, 'C', 'I', 21, 'I'], 'name': 7,
                'FILL': {'universe': 1, 'transform': {'translation': [1, 2, 3],
                         'rotation': [30, 60, 90, 120, 30, 90, 90, 90, 0]}}
            },
            8: {
                'geometry': [22, 23, 'C', 'I', 24, 'I'],
                'FILL': {'universe': 1, 'transform': {'translation': [1, 2, 3],
                         'rotation': [30, 60, 90, 120, 30, 90, 90, 90, 0],
                         'indegrees': True}}, 'name': 8
            }
        },
        'surfaces': {
            1: {'kind': 'PX', 'params': [1], 'modifier': '*', 'name': 1},
            2: {'kind': 'PY', 'params': [2], 'modifier': '+', 'name': 2},
            3: {'kind': 'PZ', 'params': [3], 'name': 3},
            4: {'kind': 'P', 'params': [1, 2, -3, -5], 'name': 4, 'comment': ('comment 4',)},
            5: {'kind': 'SO', 'params': [3], 'name': 5},
            6: {'kind': 'SX', 'params': [4, 5], 'name': 6},
            7: {'kind': 'SY', 'params': [-4, 5], 'name': 7},
            8: {'kind': 'SZ', 'params': [2.0, 6.3], 'name': 8},
            9: {'kind': 'S', 'params': [-1, 2.3, -4.1, 6], 'name': 9},
            10: {'kind': 'CX', 'params': [2, 5], 'name': 10},
            11: {'kind': 'CY', 'params': [2, 5], 'name': 11},
            12: {'kind': 'CZ', 'params': [2, 5], 'name': 12},
            13: {'kind': 'C/X', 'params': [2, 3, 5], 'name': 13},
            14: {'kind': 'C/Y', 'params': [2, 3, 5], 'name': 14},
            15: {'kind': 'C/Z', 'params': [2, 3, 5], 'name': 15},
            16: {'kind': 'KX', 'params': [2, 0.5], 'name': 16},
            17: {'kind': 'KY', 'params': [2, 0.5], 'name': 17},
            18: {'kind': 'KZ', 'params': [2, 0.5], 'name': 18},
            19: {'kind': 'K/X', 'params': [1, 2, 3, 0.5], 'name': 19},
            20: {'kind': 'K/Y', 'params': [1, 2, 3, 0.5], 'name': 20},
            21: {'kind': 'K/Z', 'params': [1, 2, 3, 0.5], 'name': 21},
            22: {'kind': 'TX', 'params': [1, 2, 3, 4, 5, 8], 'name': 22},
            23: {'kind': 'TY', 'params': [1, 2, 3, 4, 5, 8], 'name': 23},
            24: {'kind': 'TZ', 'params': [1, 2, 3, 4, 5, 8], 'name': 24},
            25: {'kind': 'SQ', 'params': [1, 2, 3, 4, 5, 6, 7, 8, 9], 'name': 25},
            26: {'kind': 'GQ', 'params': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'name': 26,
                 'comment': ('comment 5',)}
        },
        'data': {
            'TR': {
                1: {'translation': [1, 2, 3], 'name': 1, 'comment': ('comment 6',),
                    'rotation': [1, 1, 1, 2, 2, 2, 3, 3, 3], 'inverted': True},
                2: {'translation': [1, 2, 3], 'indegrees': True, 'inverted': True,
                    'rotation': [30, 60, 90, 120, 30, 90, 90, 90, 0], 'name': 2},
                3: {'translation': [1, 2, 3], 'indegrees': True, 'name': 3,
                    'rotation': [30, 60, 90, 120, 30, 90, 90, 90, 0]},
                4: {'translation': [1, 2, 3], 'indegrees': True, 'name': 4,
                    'rotation': [30, 60, 90, 120, 30, 90]},
                5: {'translation': [1, 2, 3], 'indegrees': True, 'name': 5,
                    'rotation': [30, 60, 90, 120, 30]},
                6: {'translation': [1, 2, 3], 'indegrees': True, 'name': 6,
                    'rotation': [30, 60, 90]},
                7: {'translation': [1, 2, 3], 'indegrees': True, 'name': 7}
            }
        }
    })
])
def test_mcnp_parser(parse_file, expected):
    with open(parse_file) as f:
        text = f.read()
    mcnp_input_lexer.begin('INITIAL')
    title, cells, surfaces, data = mcnp_input_parser.parse(text, lexer=mcnp_input_lexer)
    assert expected['title'] == title
    assert expected['cells'] == cells
    assert expected['surfaces'] == surfaces
    assert expected['data'] == data


@pytest.mark.parametrize('mesh_file, expected', [
    ('tests/parser_test_data/fmesh.m', {
        'date': '05/24/1812:21:45',
        'histories': 10000000.00,
        'title': 'fmesh test',
        'tallies': [
            {
                'name': 14, 'particle': 'NEUTRON', 'geom': 'XYZ',
                'bins': {
                    'ENERGY': np.array([0.00E+00, 1.00E+36]),
                    'X': np.array([-3.00, -1.00, 1.00, 3.00]), 'Y': np.array([-3.00, -1.00, 1.00, 3.00, 5.00]),
                    'Z': np.array([-4.00, -1.60, 0.80, 3.20, 5.60, 8.00])
                },
                'result': np.array([
                    [
                        [
                            [7.18813E-03, 3.06754E-03, 1.46764E-03, 7.66660E-04, 4.03778E-04],
                            [1.06634E-02, 3.67344E-03, 1.64976E-03, 8.36825E-04, 4.28819E-04],
                            [7.17257E-03, 3.06150E-03, 1.47022E-03, 7.71489E-04, 3.98268E-04],
                            [3.47599E-03, 1.93182E-03, 1.04730E-03, 5.73177E-04, 3.11514E-04]
                        ],
                        [
                            [1.06743E-02, 3.67618E-03, 1.64985E-03, 8.36179E-04, 4.36976E-04],
                            [2.01953E-02, 4.44305E-03, 1.83404E-03, 9.03003E-04, 4.60324E-04],
                            [1.06720E-02, 3.66319E-03, 1.63652E-03, 8.30197E-04, 4.30752E-04],
                            [4.24826E-03, 2.24115E-03, 1.18622E-03, 6.40838E-04, 3.43042E-04]
                        ],
                        [
                            [7.21022E-03, 3.08980E-03, 1.48035E-03, 7.68615E-04, 4.02710E-04],
                            [1.06646E-02, 3.66923E-03, 1.63603E-03, 8.31973E-04, 4.26487E-04],
                            [7.19676E-03, 3.07813E-03, 1.47782E-03, 7.74412E-04, 4.05770E-04],
                            [3.47633E-03, 1.93512E-03, 1.05235E-03, 5.78607E-04, 3.11651E-04]
                        ]
                    ]
                ]),
                'error': np.array([
                    [
                        [
                            [0.00169, 0.00264, 0.00386, 0.00532, 0.00722],
                            [0.00137, 0.00243, 0.00366, 0.00515, 0.00705],
                            [0.00169, 0.00264, 0.00384, 0.00532, 0.00727],
                            [0.00233, 0.00319, 0.00437, 0.00593, 0.00800]
                        ],
                        [
                            [0.00137, 0.00243, 0.00367, 0.00514, 0.00698],
                            [0.00093, 0.00221, 0.00350, 0.00497, 0.00682],
                            [0.00137, 0.00243, 0.00368, 0.00517, 0.00703],
                            [0.00212, 0.00302, 0.00419, 0.00572, 0.00774]
                        ],
                        [
                            [0.00169, 0.00263, 0.00383, 0.00534, 0.00725],
                            [0.00137, 0.00243, 0.00368, 0.00516, 0.00705],
                            [0.00169, 0.00264, 0.00384, 0.00531, 0.00720],
                            [0.00233, 0.00319, 0.00436, 0.00589, 0.00800]
                        ]
                    ]
                ])
            },
            {
                'name': 24, 'particle': 'PHOTON', 'geom': 'CYL',
                'origin': np.array([-3.00E+00, -3.00E+00, -4.00E+00]), 'axis': np.array([0.000E+00, 0.000E+00, 1.000E+00]),
                'bins': {
                    'ENERGY': np.array([0.00E+00, 6.67E+00, 1.33E+01, 2.00E+01]),
                    'R': np.array([0.00, 1.00, 2.00, 3.00]), 'Z': np.array([0.00, 1.25, 2.50, 3.75, 5.00]),
                    'THETA': np.array([0.000, 0.200, 0.400, 0.600, 0.800, 1.000])
                },
                'result': np.array([
                    [
                        [
                            [4.26676E-04, 3.60929E-04, 2.51881E-04, 2.35336E-04, 3.27815E-04],
                            [4.17376E-04, 3.74891E-04, 2.65612E-04, 2.47303E-04, 3.41729E-04],
                            [3.52530E-04, 3.21725E-04, 2.39415E-04, 2.22406E-04, 2.87633E-04],
                            [2.91647E-04, 2.64957E-04, 2.03075E-04, 1.88207E-04, 2.53038E-04]
                        ],
                        [
                            [5.72802E-04, 4.02577E-04, 1.62808E-04, 1.47284E-04, 3.22879E-04],
                            [5.32281E-04, 3.90955E-04, 1.77012E-04, 1.56642E-04, 3.20700E-04],
                            [4.34871E-04, 3.36510E-04, 1.64430E-04, 1.47865E-04, 2.81179E-04],
                            [3.39817E-04, 2.74729E-04, 1.44850E-04, 1.30022E-04, 2.32783E-04]
                        ],
                        [
                            [7.68761E-04, 4.02569E-04, 1.09868E-04, 9.83327E-05, 2.85524E-04],
                            [6.74185E-04, 3.99908E-04, 1.23025E-04, 1.08080E-04, 2.97412E-04],
                            [5.11027E-04, 3.42010E-04, 1.15448E-04, 1.05403E-04, 2.57364E-04],
                            [3.89689E-04, 2.67553E-04, 1.05158E-04, 9.46154E-05, 2.10578E-04]
                        ]
                    ],
                    [
                        [
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.24150E-07, 5.58994E-09, 1.24827E-07, 0.00000E+00, 0.00000E+00],
                            [5.57853E-09, 2.64984E-08, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
                        ],
                        [
                            [3.31041E-08, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [4.24567E-08, 4.34742E-08, 4.24567E-08, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 1.51344E-08, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [9.82692E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
                        ],
                        [
                            [3.44266E-08, 3.21212E-08, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [4.55038E-08, 3.04180E-08, 2.54702E-08, 0.00000E+00, 0.00000E+00],
                            [3.03939E-09, 3.13872E-08, 4.05251E-09, 0.00000E+00, 0.00000E+00],
                            [2.19894E-09, 4.43644E-09, 3.78085E-08, 0.00000E+00, 0.00000E+00]
                        ]
                    ],
                    [
                        [
                            [1.61383E-07, 2.45465E-07, 4.80361E-08, 2.86873E-08, 1.36531E-07],
                            [0.00000E+00, 0.00000E+00, 6.11344E-08, 6.62558E-08, 6.94414E-08],
                            [1.79183E-07, 1.83093E-07, 1.26324E-07, 1.10180E-07, 9.84652E-08],
                            [1.15801E-07, 7.11787E-08, 9.61169E-08, 6.27373E-08, 9.09577E-08]
                        ],
                        [
                            [3.33988E-07, 3.02723E-07, 1.00276E-07, 4.54345E-08, 1.28529E-07],
                            [1.05911E-07, 0.00000E+00, 6.03481E-08, 6.20807E-08, 6.65379E-08],
                            [1.03901E-07, 1.16357E-07, 1.77282E-07, 6.12241E-08, 1.68246E-07],
                            [6.42099E-08, 5.82408E-08, 3.50897E-08, 1.41587E-07, 6.02894E-08]
                        ],
                        [
                            [4.35790E-07, 5.28413E-08, 6.09709E-08, 2.61146E-08, 2.55932E-07],
                            [1.36592E-07, 2.03173E-07, 6.40422E-08, 2.55531E-08, 1.59063E-07],
                            [2.33628E-07, 3.94338E-07, 1.14898E-07, 1.76035E-08, 9.71856E-08],
                            [2.10624E-07, 1.56979E-07, 7.03514E-08, 4.10227E-08, 1.43260E-07]
                        ]
                    ]
                ]),
                'error': np.array([
                    [
                        [
                            [1.51165E-02, 1.65362E-02, 1.95638E-02, 2.00471E-02, 1.74294E-02],
                            [1.54432E-02, 1.65796E-02, 1.93011E-02, 1.98625E-02, 1.73169E-02],
                            [1.70852E-02, 1.80477E-02, 2.04493E-02, 2.12808E-02, 1.90279E-02],
                            [1.91640E-02, 2.00755E-02, 2.24192E-02, 2.31940E-02, 2.06925E-02]
                        ],
                        [
                            [9.09560E-03, 1.13354E-02, 1.68719E-02, 1.73306E-02, 1.27127E-02],
                            [9.56337E-03, 1.15957E-02, 1.62495E-02, 1.68587E-02, 1.28723E-02],
                            [1.07933E-02, 1.25307E-02, 1.69082E-02, 1.73571E-02, 1.37630E-02],
                            [1.21292E-02, 1.38951E-02, 1.80609E-02, 1.84843E-02, 1.50679E-02]
                        ],
                        [
                            [6.46985E-03, 9.39907E-03, 1.63465E-02, 1.65062E-02, 1.11913E-02],
                            [7.10451E-03, 9.57794E-03, 1.55160E-02, 1.59039E-02, 1.11509E-02],
                            [8.19050E-03, 1.02979E-02, 1.59845E-02, 1.59556E-02, 1.17764E-02],
                            [9.40942E-03, 1.15396E-02, 1.66056E-02, 1.68655E-02, 1.28912E-02]
                        ]
                    ],
                    [
                        [
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.00000E+00, 1.00000E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.00000E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
                        ],
                        [
                            [1.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.00000E+00, 1.00000E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
                        ],
                        [
                            [1.00000E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [7.94765E-01, 1.00000E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.00000E+00, 1.00000E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.00000E+00, 1.00000E+00, 1.00000E+00, 0.00000E+00, 0.00000E+00]
                        ]
                    ],
                    [
                        [
                            [7.13649E-01, 7.08199E-01, 7.92007E-01, 1.00000E+00, 7.98367E-01],
                            [0.00000E+00, 0.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00],
                            [7.37976E-01, 7.34192E-01, 8.08038E-01, 1.00000E+00, 9.90367E-01],
                            [1.00000E+00, 1.00000E+00, 1.00000E+00, 7.11428E-01, 1.00000E+00]
                        ],
                        [
                            [3.73939E-01, 4.35674E-01, 6.39167E-01, 1.00000E+00, 6.13512E-01],
                            [7.09827E-01, 0.00000E+00, 8.65521E-01, 8.21311E-01, 7.07324E-01],
                            [7.06117E-01, 6.58996E-01, 5.87822E-01, 8.92465E-01, 5.85102E-01],
                            [5.99586E-01, 7.93568E-01, 1.00000E+00, 5.39828E-01, 1.00000E+00]
                        ],
                        [
                            [2.74749E-01, 6.07463E-01, 7.11666E-01, 1.00000E+00, 3.38896E-01],
                            [4.70422E-01, 4.07795E-01, 7.12197E-01, 1.00000E+00, 4.89133E-01],
                            [4.69333E-01, 3.23265E-01, 4.92014E-01, 8.57334E-01, 5.38949E-01],
                            [3.71867E-01, 4.36175E-01, 7.21109E-01, 7.29208E-01, 4.55335E-01]
                        ]
                    ]
                ])
            },
            {
                'name': 34, 'particle': 'ELECTRON', 'geom': 'XYZ',
                'bins': {
                    'ENERGY': np.array([0.00E+00, 6.67E+00, 1.33E+01, 2.00E+01]),
                    'X': np.array([-3.00, -1.00, 1.00, 3.00]), 'Y': np.array([-3.00, -1.00, 1.00, 3.00, 5.00]),
                    'Z': np.array([-4.00, -1.60, 0.80, 3.20, 5.60, 8.00])
                },
                'result': np.array([
                    [
                        [
                            [2.15470E-05, 1.47842E-05, 8.41469E-06, 5.31042E-06, 2.58881E-06],
                            [2.90692E-05, 1.77388E-05, 9.66903E-06, 5.45955E-06, 3.11251E-06],
                            [2.20583E-05, 1.50941E-05, 8.60972E-06, 5.05476E-06, 3.02462E-06],
                            [1.09006E-05, 9.11214E-06, 6.48347E-06, 3.71926E-06, 2.25027E-06]
                        ],
                        [
                            [2.93677E-05, 1.70248E-05, 1.00628E-05, 5.66025E-06, 3.11381E-06],
                            [4.13888E-05, 2.01021E-05, 1.08080E-05, 6.11828E-06, 3.37041E-06],
                            [2.85739E-05, 1.71446E-05, 9.64213E-06, 5.33722E-06, 3.04467E-06],
                            [1.38698E-05, 1.14807E-05, 6.74720E-06, 4.62259E-06, 2.49310E-06]
                        ],
                        [
                            [2.14460E-05, 1.51609E-05, 8.42577E-06, 5.04945E-06, 2.89669E-06],
                            [2.77666E-05, 1.71581E-05, 1.01360E-05, 5.69297E-06, 3.08384E-06],
                            [2.15495E-05, 1.43817E-05, 8.53499E-06, 5.07401E-06, 2.83177E-06],
                            [1.13652E-05, 8.80429E-06, 5.28008E-06, 3.52305E-06, 2.07175E-06]
                        ]
                    ],
                    [
                        [
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [3.26852E-09, 9.89135E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [7.96285E-09, 9.83845E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 1.13799E-08, 0.00000E+00]
                        ],
                        [
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.52051E-08, 1.18793E-08, 3.44674E-09, 0.00000E+00, 0.00000E+00],
                            [1.26318E-08, 0.00000E+00, 0.00000E+00, 6.67205E-09, 0.00000E+00],
                            [9.56817E-09, 3.09187E-09, 7.86285E-09, 1.18994E-09, 0.00000E+00]
                        ],
                        [
                            [4.66316E-09, 7.48677E-09, 2.88179E-09, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 1.37866E-08, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [8.21988E-09, 2.23643E-08, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.70057E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
                        ]

                    ],
                    [
                        [
                            [3.99267E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [1.43729E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [3.48114E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
                        ],
                        [
                            [1.09841E-08, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 0.00000E+00, 1.66217E-09, 0.00000E+00, 0.00000E+00],
                            [4.72261E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 8.79939E-10, 9.98414E-09, 8.32928E-09, 0.00000E+00]
                        ],
                        [
                            [1.09076E-08, 2.46367E-09, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00],
                            [8.07081E-09, 4.18543E-09, 2.82902E-09, 0.00000E+00, 0.00000E+00],
                            [0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00]
                        ]

                    ]
                ]),
                'error': np.array([
                    [
                        [
                            [0.01902, 0.02288, 0.03020, 0.03851, 0.05383],
                            [0.01640, 0.02090, 0.02820, 0.03750, 0.04963],
                            [0.01886, 0.02272, 0.03020, 0.03915, 0.05082],
                            [0.02834, 0.03076, 0.03680, 0.04882, 0.06265]
                        ],
                        [
                            [0.01637, 0.02122, 0.02782, 0.03681, 0.04955],
                            [0.01390, 0.01960, 0.02668, 0.03578, 0.04802],
                            [0.01662, 0.02122, 0.02836, 0.03747, 0.04925],
                            [0.02380, 0.02623, 0.03377, 0.04113, 0.05499]
                        ],
                        [
                            [0.01907, 0.02275, 0.03038, 0.03881, 0.05075],
                            [0.01681, 0.02130, 0.02777, 0.03607, 0.04907],
                            [0.01913, 0.02315, 0.03017, 0.03899, 0.05175],
                            [0.02756, 0.03115, 0.03975, 0.04945, 0.06481]
                        ]
                    ],
                    [
                        [
                            [0.00000, 0.00000, 0.00000, 0.00000, 0.00000],
                            [1.00000, 1.00000, 0.00000, 0.00000, 0.00000],
                            [1.00000, 1.00000, 0.00000, 0.00000, 0.00000],
                            [0.00000, 0.00000, 0.00000, 1.00000, 0.00000]
                        ],
                        [
                            [0.00000, 0.00000, 0.00000, 0.00000, 0.00000],
                            [0.82592, 1.00000, 1.00000, 0.00000, 0.00000],
                            [0.70981, 0.00000, 0.00000, 1.00000, 0.00000],
                            [0.93217, 1.00000, 1.00000, 1.00000, 0.00000]
                        ],
                        [
                            [1.00000, 0.77600, 1.00000, 0.00000, 0.00000],
                            [0.00000, 0.89989, 0.00000, 0.00000, 0.00000],
                            [0.77883, 0.76382, 0.00000, 0.00000, 0.00000],
                            [1.00000, 0.00000, 0.00000, 0.00000, 0.00000]
                        ]
                    ],
                    [
                        [
                            [1.00000, 0.00000, 0.00000, 0.00000, 0.00000],
                            [1.00000, 0.00000, 0.00000, 0.00000, 0.00000],
                            [1.00000, 0.00000, 0.00000, 0.00000, 0.00000],
                            [0.00000, 0.00000, 0.00000, 0.00000, 0.00000]
                        ],
                        [
                            [1.00000, 0.00000, 0.00000, 0.00000, 0.00000],
                            [0.00000, 0.00000, 1.00000, 0.00000, 0.00000],
                            [1.00000, 0.00000, 0.00000, 0.00000, 0.00000],
                            [0.00000, 1.00000, 1.00000, 1.00000, 0.00000]
                        ],
                        [
                            [1.00000, 0.74901, 0.00000, 0.00000, 0.00000],
                            [0.00000, 0.00000, 0.00000, 0.00000, 0.00000],
                            [1.00000, 1.00000, 1.00000, 0.00000, 0.00000],
                            [0.00000, 0.00000, 0.00000, 0.00000, 0.00000]
                        ]
                    ]
                ])
            },
            {
                'name': 44, 'particle': 'NEUTRON', 'geom': 'CYL',
                'origin': np.array([-3.00E+00, -3.00E+00, -4.00E+00]), 'axis': np.array([0.000E+00, 0.000E+00, 1.000E+00]),
                'bins': {
                    'ENERGY': np.array([0.00E+00, 6.67E+00, 1.33E+01, 2.00E+01]),
                    'R': np.array([0.00, 1.00, 2.00, 3.00]), 'Z': np.array([0.00, 1.25, 2.50, 3.75, 5.00]),
                    'THETA': np.array([0.000, 0.200, 0.400, 0.600, 0.800, 1.000])
                },
                'result': np.array([
                    [
                        [
                            [6.36513E-04, 5.39688E-04, 3.56988E-04, 3.25666E-04, 4.90815E-04],
                            [6.81107E-04, 5.81260E-04, 3.95854E-04, 3.69511E-04, 5.38530E-04],
                            [5.91488E-04, 5.24466E-04, 3.66878E-04, 3.32395E-04, 4.83348E-04],
                            [4.84344E-04, 4.19087E-04, 2.96782E-04, 2.80874E-04, 3.97798E-04]
                        ],
                        [
                            [8.75449E-04, 5.96380E-04, 2.18626E-04, 1.89416E-04, 4.71914E-04],
                            [9.14165E-04, 6.39521E-04, 2.54077E-04, 2.16996E-04, 5.13943E-04],
                            [7.60698E-04, 5.53425E-04, 2.37453E-04, 2.02494E-04, 4.51437E-04],
                            [5.99848E-04, 4.56087E-04, 2.05150E-04, 1.78299E-04, 3.79469E-04]
                        ],
                        [
                            [1.16547E-03, 6.10956E-04, 1.44214E-04, 1.28095E-04, 4.19222E-04],
                            [1.12122E-03, 6.39670E-04, 1.66427E-04, 1.46253E-04, 4.61955E-04],
                            [9.04913E-04, 5.66029E-04, 1.66111E-04, 1.43689E-04, 4.10153E-04],
                            [6.83654E-04, 4.49291E-04, 1.49303E-04, 1.32920E-04, 3.40205E-04]
                        ]
                    ],
                    [
                        [
                            [5.68879E-04, 5.00413E-04, 3.63351E-04, 3.51731E-04, 4.65246E-04],
                            [5.74251E-04, 5.13881E-04, 3.69454E-04, 3.48172E-04, 4.67461E-04],
                            [4.55839E-04, 4.16947E-04, 3.17566E-04, 3.00836E-04, 3.90086E-04],
                            [3.52446E-04, 3.26314E-04, 2.55279E-04, 2.45904E-04, 3.07041E-04]
                        ],
                        [
                            [7.44170E-04, 5.41893E-04, 2.34327E-04, 2.04675E-04, 4.49847E-04],
                            [7.15024E-04, 5.39231E-04, 2.49338E-04, 2.21067E-04, 4.58030E-04],
                            [5.52225E-04, 4.30963E-04, 2.22508E-04, 1.99851E-04, 3.75739E-04],
                            [4.16330E-04, 3.40119E-04, 1.84454E-04, 1.72092E-04, 2.95224E-04]
                        ],
                        [
                            [9.82620E-04, 5.47755E-04, 1.53812E-04, 1.37189E-04, 3.99798E-04],
                            [8.61145E-04, 5.31881E-04, 1.65989E-04, 1.45397E-04, 4.07246E-04],
                            [6.41086E-04, 4.28584E-04, 1.60945E-04, 1.41904E-04, 3.40225E-04],
                            [4.62649E-04, 3.29253E-04, 1.41001E-04, 1.28809E-04, 2.68768E-04]
                        ]
                    ],
                    [
                        [
                            [4.47611E-03, 3.76194E-03, 2.78037E-03, 2.66749E-03, 3.44401E-03],
                            [2.80391E-03, 2.42859E-03, 1.86302E-03, 1.80358E-03, 2.24376E-03],
                            [1.77640E-03, 1.60347E-03, 1.29141E-03, 1.27639E-03, 1.52562E-03],
                            [1.14696E-03, 1.05410E-03, 9.04880E-04, 8.62988E-04, 1.00358E-03]
                        ],
                        [
                            [6.74332E-03, 4.23841E-03, 2.21247E-03, 2.08460E-03, 3.42436E-03],
                            [3.83163E-03, 2.68914E-03, 1.53160E-03, 1.43832E-03, 2.25032E-03],
                            [2.21608E-03, 1.70459E-03, 1.10556E-03, 1.05776E-03, 1.49573E-03],
                            [1.35022E-03, 1.09847E-03, 8.04995E-04, 7.82749E-04, 9.96630E-04]
                        ],
                        [
                            [1.09575E-02, 4.60953E-03, 1.78375E-03, 1.65950E-03, 3.25593E-03],
                            [5.19313E-03, 2.77331E-03, 1.26611E-03, 1.17277E-03, 2.12967E-03],
                            [2.70508E-03, 1.73632E-03, 9.59336E-04, 9.03811E-04, 1.44242E-03],
                            [1.54029E-03, 1.12071E-03, 7.15744E-04, 6.89978E-04, 9.75051E-04]
                        ]
                    ]
                ]),
                'error': np.array([
                    [
                        [
                            [0.01224, 0.01342, 0.01593, 0.01652, 0.01406],
                            [0.01208, 0.01310, 0.01534, 0.01564, 0.01366],
                            [0.01316, 0.01387, 0.01612, 0.01668, 0.01449],
                            [0.01451, 0.01572, 0.01797, 0.01826, 0.01614]
                        ],
                        [
                            [0.00731, 0.00910, 0.01382, 0.01457, 0.01018],
                            [0.00743, 0.00900, 0.01303, 0.01360, 0.00988],
                            [0.00817, 0.00959, 0.01342, 0.01411, 0.01052],
                            [0.00927, 0.01064, 0.01440, 0.01499, 0.01148]
                        ],
                        [
                            [0.00525, 0.00742, 0.01359, 0.01385, 0.00887],
                            [0.00556, 0.00738, 0.01271, 0.01300, 0.00856],
                            [0.00622, 0.00788, 0.01271, 0.01307, 0.00904],
                            [0.00716, 0.00878, 0.01334, 0.01361, 0.00988]
                        ]
                    ],
                    [
                        [
                            [0.01210, 0.01309, 0.01519, 0.01543, 0.01356],
                            [0.01227, 0.01311, 0.01520, 0.01556, 0.01362],
                            [0.01389, 0.01467, 0.01663, 0.01696, 0.01510],
                            [0.01599, 0.01676, 0.01851, 0.01884, 0.01717]
                        ],
                        [
                            [0.00732, 0.00902, 0.01334, 0.01399, 0.00996],
                            [0.00760, 0.00911, 0.01294, 0.01350, 0.00990],
                            [0.00867, 0.01007, 0.01367, 0.01414, 0.01088],
                            [0.01000, 0.01134, 0.01499, 0.01520, 0.01226]
                        ],
                        [
                            [0.00523, 0.00746, 0.01313, 0.01339, 0.00882],
                            [0.00566, 0.00757, 0.01265, 0.01288, 0.00877],
                            [0.00657, 0.00835, 0.01281, 0.01309, 0.00944],
                            [0.00771, 0.00940, 0.01360, 0.01371, 0.01052]
                        ]
                    ],
                    [
                        [
                            [0.00434, 0.00507, 0.00568, 0.00583, 0.00534],
                            [0.00567, 0.00645, 0.00705, 0.00721, 0.00671],
                            [0.00742, 0.00819, 0.00871, 0.00880, 0.00838],
                            [0.00954, 0.01034, 0.01069, 0.01089, 0.01049]
                        ],
                        [
                            [0.00238, 0.00382, 0.00439, 0.00438, 0.00422],
                            [0.00326, 0.00458, 0.00527, 0.00528, 0.00502],
                            [0.00437, 0.00555, 0.00624, 0.00621, 0.00595],
                            [0.00565, 0.00677, 0.00738, 0.00733, 0.00711]
                        ],
                        [
                            [0.00156, 0.00315, 0.00385, 0.00387, 0.00354],
                            [0.00229, 0.00366, 0.00454, 0.00458, 0.00412],
                            [0.00319, 0.00439, 0.00525, 0.00526, 0.00480],
                            [0.00424, 0.00531, 0.00610, 0.00606, 0.00567]
                        ]
                    ]
                ])
            },
            {
                'name': 54, 'particle': 'NEUTRON', 'geom': 'CYL',
                'origin': np.array([-3.00E+00, -3.00E+00, -4.00E+00]), 'axis': np.array([0.000E+00, 0.000E+00, 1.000E+00]),
                'bins': {
                    'ENERGY': np.array([0.00E+00, 6.67E+00, 1.33E+01, 2.00E+01]),
                    'R': np.array([0.00, 1.00, 2.00, 3.00]), 'Z': np.array([0.00, 1.25, 2.50, 3.75, 5.00]),
                    'THETA': np.array([0.000, 0.200, 0.400, 0.600, 0.800, 1.000])
                },
                'result': np.array([
                    [
                        [
                            [6.36513E-04, 5.39688E-04, 3.56988E-04, 3.25666E-04, 4.90815E-04],
                            [6.81107E-04, 5.81260E-04, 3.95854E-04, 3.69511E-04, 5.38530E-04],
                            [5.91488E-04, 5.24466E-04, 3.66878E-04, 3.32395E-04, 4.83348E-04],
                            [4.84344E-04, 4.19087E-04, 2.96782E-04, 2.80874E-04, 3.97798E-04]
                        ],
                        [
                            [8.75449E-04, 5.96380E-04, 2.18626E-04, 1.89416E-04, 4.71914E-04],
                            [9.14165E-04, 6.39521E-04, 2.54077E-04, 2.16996E-04, 5.13943E-04],
                            [7.60698E-04, 5.53425E-04, 2.37453E-04, 2.02494E-04, 4.51437E-04],
                            [5.99848E-04, 4.56087E-04, 2.05150E-04, 1.78299E-04, 3.79469E-04]
                        ],
                        [
                            [1.16547E-03, 6.10956E-04, 1.44214E-04, 1.28095E-04, 4.19222E-04],
                            [1.12122E-03, 6.39670E-04, 1.66427E-04, 1.46253E-04, 4.61955E-04],
                            [9.04913E-04, 5.66029E-04, 1.66111E-04, 1.43689E-04, 4.10153E-04],
                            [6.83654E-04, 4.49291E-04, 1.49303E-04, 1.32920E-04, 3.40205E-04]
                        ]
                    ],
                    [
                        [
                            [5.68879E-04, 5.00413E-04, 3.63351E-04, 3.51731E-04, 4.65246E-04],
                            [5.74251E-04, 5.13881E-04, 3.69454E-04, 3.48172E-04, 4.67461E-04],
                            [4.55839E-04, 4.16947E-04, 3.17566E-04, 3.00836E-04, 3.90086E-04],
                            [3.52446E-04, 3.26314E-04, 2.55279E-04, 2.45904E-04, 3.07041E-04]
                        ],
                        [
                            [7.44170E-04, 5.41893E-04, 2.34327E-04, 2.04675E-04, 4.49847E-04],
                            [7.15024E-04, 5.39231E-04, 2.49338E-04, 2.21067E-04, 4.58030E-04],
                            [5.52225E-04, 4.30963E-04, 2.22508E-04, 1.99851E-04, 3.75739E-04],
                            [4.16330E-04, 3.40119E-04, 1.84454E-04, 1.72092E-04, 2.95224E-04]
                        ],
                        [
                            [9.82620E-04, 5.47755E-04, 1.53812E-04, 1.37189E-04, 3.99798E-04],
                            [8.61145E-04, 5.31881E-04, 1.65989E-04, 1.45397E-04, 4.07246E-04],
                            [6.41086E-04, 4.28584E-04, 1.60945E-04, 1.41904E-04, 3.40225E-04],
                            [4.62649E-04, 3.29253E-04, 1.41001E-04, 1.28809E-04, 2.68768E-04]
                        ]
                    ],
                    [
                        [
                            [4.47611E-03, 3.76194E-03, 2.78037E-03, 2.66749E-03, 3.44401E-03],
                            [2.80391E-03, 2.42859E-03, 1.86302E-03, 1.80358E-03, 2.24376E-03],
                            [1.77640E-03, 1.60347E-03, 1.29141E-03, 1.27639E-03, 1.52562E-03],
                            [1.14696E-03, 1.05410E-03, 9.04880E-04, 8.62988E-04, 1.00358E-03]
                        ],
                        [
                            [6.74332E-03, 4.23841E-03, 2.21247E-03, 2.08460E-03, 3.42436E-03],
                            [3.83163E-03, 2.68914E-03, 1.53160E-03, 1.43832E-03, 2.25032E-03],
                            [2.21608E-03, 1.70459E-03, 1.10556E-03, 1.05776E-03, 1.49573E-03],
                            [1.35022E-03, 1.09847E-03, 8.04995E-04, 7.82749E-04, 9.96630E-04]
                        ],
                        [
                            [1.09575E-02, 4.60953E-03, 1.78375E-03, 1.65950E-03, 3.25593E-03],
                            [5.19313E-03, 2.77331E-03, 1.26611E-03, 1.17277E-03, 2.12967E-03],
                            [2.70508E-03, 1.73632E-03, 9.59336E-04, 9.03811E-04, 1.44242E-03],
                            [1.54029E-03, 1.12071E-03, 7.15744E-04, 6.89978E-04, 9.75051E-04]
                        ]
                    ]
                ]),
                'error': np.array([
                    [
                        [
                            [0.01224, 0.01342, 0.01593, 0.01652, 0.01406],
                            [0.01208, 0.01310, 0.01534, 0.01564, 0.01366],
                            [0.01316, 0.01387, 0.01612, 0.01668, 0.01449],
                            [0.01451, 0.01572, 0.01797, 0.01826, 0.01614]
                        ],
                        [
                            [0.00731, 0.00910, 0.01382, 0.01457, 0.01018],
                            [0.00743, 0.00900, 0.01303, 0.01360, 0.00988],
                            [0.00817, 0.00959, 0.01342, 0.01411, 0.01052],
                            [0.00927, 0.01064, 0.01440, 0.01499, 0.01148]
                        ],
                        [
                            [0.00525, 0.00742, 0.01359, 0.01385, 0.00887],
                            [0.00556, 0.00738, 0.01271, 0.01300, 0.00856],
                            [0.00622, 0.00788, 0.01271, 0.01307, 0.00904],
                            [0.00716, 0.00878, 0.01334, 0.01361, 0.00988]
                        ]
                    ],
                    [
                        [
                            [0.01210, 0.01309, 0.01519, 0.01543, 0.01356],
                            [0.01227, 0.01311, 0.01520, 0.01556, 0.01362],
                            [0.01389, 0.01467, 0.01663, 0.01696, 0.01510],
                            [0.01599, 0.01676, 0.01851, 0.01884, 0.01717]
                        ],
                        [
                            [0.00732, 0.00902, 0.01334, 0.01399, 0.00996],
                            [0.00760, 0.00911, 0.01294, 0.01350, 0.00990],
                            [0.00867, 0.01007, 0.01367, 0.01414, 0.01088],
                            [0.01000, 0.01134, 0.01499, 0.01520, 0.01226]
                        ],
                        [
                            [0.00523, 0.00746, 0.01313, 0.01339, 0.00882],
                            [0.00566, 0.00757, 0.01265, 0.01288, 0.00877],
                            [0.00657, 0.00835, 0.01281, 0.01309, 0.00944],
                            [0.00771, 0.00940, 0.01360, 0.01371, 0.01052]
                        ]
                    ],
                    [
                        [
                            [0.00434, 0.00507, 0.00568, 0.00583, 0.00534],
                            [0.00567, 0.00645, 0.00705, 0.00721, 0.00671],
                            [0.00742, 0.00819, 0.00871, 0.00880, 0.00838],
                            [0.00954, 0.01034, 0.01069, 0.01089, 0.01049]
                        ],
                        [
                            [0.00238, 0.00382, 0.00439, 0.00438, 0.00422],
                            [0.00326, 0.00458, 0.00527, 0.00528, 0.00502],
                            [0.00437, 0.00555, 0.00624, 0.00621, 0.00595],
                            [0.00565, 0.00677, 0.00738, 0.00733, 0.00711]
                        ],
                        [
                            [0.00156, 0.00315, 0.00385, 0.00387, 0.00354],
                            [0.00229, 0.00366, 0.00454, 0.00458, 0.00412],
                            [0.00319, 0.00439, 0.00525, 0.00526, 0.00480],
                            [0.00424, 0.00531, 0.00610, 0.00606, 0.00567]
                        ]
                    ]
                ])
            },
            {
                'name': 64, 'particle': 'ELECTRON', 'geom': 'XYZ',
                'bins': {
                    'ENERGY': np.array([1.00E-03, 1.00E+02]),
                    'X': np.array([-3.00, -1.00, 1.00, 3.00]), 'Y': np.array([-3.00, -1.00, 1.00, 3.00, 5.00]),
                    'Z': np.array([-4.00, -3.00, -2.00, -1.00, 0.00, 1.00])
                },
                'result': np.array([
                    [
                        [
                            [2.27419E-05, 2.17868E-05, 1.72577E-05, 1.53648E-05, 1.22356E-05],
                            [3.11127E-05, 2.85558E-05, 2.31183E-05, 1.84432E-05, 1.36892E-05],
                            [2.26343E-05, 2.23131E-05, 1.89640E-05, 1.47211E-05, 1.28286E-05],
                            [1.07191E-05, 1.14047E-05, 1.02882E-05, 9.13652E-06, 8.13062E-06]
                        ],
                        [
                            [3.05415E-05, 2.95938E-05, 2.37784E-05, 1.72760E-05, 1.26062E-05],
                            [4.66317E-05, 4.01764E-05, 2.83337E-05, 2.08623E-05, 1.43317E-05],
                            [3.00266E-05, 2.91989E-05, 2.23563E-05, 1.74685E-05, 1.32246E-05],
                            [1.29678E-05, 1.47402E-05, 1.37617E-05, 1.11206E-05, 9.89096E-06]
                        ],
                        [
                            [2.18894E-05, 2.16545E-05, 1.91636E-05, 1.47231E-05, 1.26959E-05],
                            [2.88450E-05, 2.85265E-05, 2.21880E-05, 1.67353E-05, 1.43432E-05],
                            [2.19202E-05, 2.23430E-05, 1.81618E-05, 1.49328E-05, 1.10308E-05],
                            [1.11572E-05, 1.18185E-05, 1.00818E-05, 9.17390E-06, 7.42903E-06]
                        ]
                    ]

                ]),
                'error': np.array([
                    [
                        [
                            [2.78362E-02, 2.81298E-02, 3.09657E-02, 3.30592E-02, 3.72776E-02],
                            [2.36916E-02, 2.42652E-02, 2.71698E-02, 3.04575E-02, 3.49528E-02],
                            [2.76754E-02, 2.76985E-02, 3.02390E-02, 3.40211E-02, 3.70110E-02],
                            [4.23854E-02, 4.03991E-02, 4.24013E-02, 4.51811E-02, 4.82304E-02]
                        ],
                        [
                            [2.36816E-02, 2.44779E-02, 2.70306E-02, 3.09652E-02, 3.63388E-02],
                            [1.94626E-02, 2.09634E-02, 2.45109E-02, 2.89800E-02, 3.39383E-02],
                            [2.40983E-02, 2.44504E-02, 2.73977E-02, 3.12602E-02, 3.52662E-02],
                            [3.67117E-02, 3.42116E-02, 3.58161E-02, 3.92775E-02, 4.15590E-02]
                        ],
                        [
                            [2.83303E-02, 2.81832E-02, 3.00929E-02, 3.37627E-02, 3.69545E-02],
                            [2.45929E-02, 2.47182E-02, 2.79120E-02, 3.20100E-02, 3.41955E-02],
                            [2.81071E-02, 2.80327E-02, 3.07090E-02, 3.35533E-02, 3.82874E-02],
                            [4.15137E-02, 3.92549E-02, 4.21972E-02, 4.47530E-02, 5.03052E-02]
                        ]
                    ]
                ])
            },
            {
                'name': 74, 'particle': 'NEUTRON', 'geom': 'XYZ',
                'bins': {
                    'ENERGY': np.array([0.00E+00, 1.00E+36]),
                    'X': np.array([-3.00, -1.00, 1.00, 3.00]), 'Y': np.array([-3.00, -1.00, 1.00, 3.00, 5.00]),
                    'Z': np.array([-4.00, -3.00, -2.00, -1.00, 0.00, 1.00])
                },
                'result': np.array([
                    [
                        [
                            [9.04444E-03, 6.27702E-03, 4.35550E-03, 3.08614E-03, 2.24486E-03],
                            [1.45306E-02, 8.59736E-03, 5.46472E-03, 3.67699E-03, 2.59166E-03],
                            [9.03290E-03, 6.26415E-03, 4.33504E-03, 3.08761E-03, 2.23683E-03],
                            [4.06754E-03, 3.19242E-03, 2.51993E-03, 1.96192E-03, 1.50871E-03]
                        ],
                        [
                            [1.45132E-02, 8.63447E-03, 5.47173E-03, 3.68526E-03, 2.58725E-03],
                            [3.19700E-02, 1.31972E-02, 7.10455E-03, 4.40634E-03, 2.96430E-03],
                            [1.45048E-02, 8.63950E-03, 5.46359E-03, 3.67178E-03, 2.57053E-03],
                            [4.99942E-03, 3.89479E-03, 2.99886E-03, 2.26266E-03, 1.73108E-03]
                        ],
                        [
                            [9.08998E-03, 6.27654E-03, 4.38343E-03, 3.11244E-03, 2.25694E-03],
                            [1.44999E-02, 8.62357E-03, 5.47940E-03, 3.67164E-03, 2.57404E-03],
                            [9.09387E-03, 6.25030E-03, 4.35821E-03, 3.10312E-03, 2.25166E-03],
                            [4.06678E-03, 3.19813E-03, 2.51588E-03, 1.95568E-03, 1.52583E-03]
                        ]
                    ]
                ]),
                'error': np.array([
                    [
                        [
                            [1.97528E-03, 2.24830E-03, 2.63811E-03, 3.10952E-03, 3.63575E-03],
                            [1.46500E-03, 1.84926E-03, 2.30835E-03, 2.81878E-03, 3.36778E-03],
                            [1.97542E-03, 2.25144E-03, 2.64319E-03, 3.10959E-03, 3.62573E-03],
                            [3.04694E-03, 3.26414E-03, 3.53917E-03, 3.92537E-03, 4.38197E-03]
                        ],
                        [
                            [1.46549E-03, 1.84509E-03, 2.30611E-03, 2.81385E-03, 3.36711E-03],
                            [8.39012E-04, 1.39430E-03, 1.95952E-03, 2.53111E-03, 3.11841E-03],
                            [1.46653E-03, 1.84612E-03, 2.30960E-03, 2.81762E-03, 3.37416E-03],
                            [2.73104E-03, 2.95514E-03, 3.25122E-03, 3.66135E-03, 4.13756E-03]
                        ],
                        [
                            [1.97264E-03, 2.24742E-03, 2.63617E-03, 3.08949E-03, 3.61779E-03],
                            [1.46565E-03, 1.84595E-03, 2.30669E-03, 2.81720E-03, 3.37333E-03],
                            [1.97189E-03, 2.25217E-03, 2.63446E-03, 3.09805E-03, 3.62754E-03],
                            [3.04754E-03, 3.26402E-03, 3.54243E-03, 3.91995E-03, 4.37779E-03]
                        ]
                    ]
                ])

            }
        ]
    })
])
def test_meshtal_parser(mesh_file, expected):
    with open(mesh_file) as f:
        text = f.read()
    meshtal_lexer.begin('INITIAL')
    tallies = meshtal_parser.parse(text, lexer=meshtal_lexer)
    assert tallies.keys() == expected.keys()
    for k in ['date', 'histories', 'title']:
        assert tallies[k] == expected[k]
    for t, a in zip(tallies['tallies'], expected['tallies']):
        for k in ['name', 'particle', 'geom']:
            assert t[k] == a[k]
        for k, v in a['bins'].items():
            np.testing.assert_array_almost_equal(t['bins'][k], v)
        np.testing.assert_array_almost_equal(t['result'], a['result'])
        np.testing.assert_array_almost_equal(t['error'], a['error'])
