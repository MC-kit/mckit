[tool.poetry]
name = "mckit"
version = "0.6.3-alpha.0"
description = "Tools to process MCNP models and results"
authors = ["rrn <r.rodionov@iterrf.ru>"]
maintainers = ["dpv2015 <dmitri_portnov@yahoo.com>"]
homepage = "https://github.com/rorni/mckit"
repository = "https://github.com/rorni/mckit"
documentation = "https://mckit.readthedocs.io"
license = "GPL3"
keywords = ["mckit", "MCNP"]
build = "build.py"
readme = "README.rst"
packages = [
    { include = "mckit" }
]
include = [
    "mckit/data/isotopes.dat",
]
exclude = [
#    "__pycache__",
    ".py[co]$",
]
# Select from PyPI classifiers: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Physics",
]


[tool.poetry.dependencies]
<<<<<<< HEAD
python = "^3.8,<3.11"   # TODO dvp: increase upper version bound along with scipy updates
||||||| 72c6116
python = "^3.8"
=======
python = "^3.8,<3.11"  # TODO dvp: move upper bound along with scipy updates
>>>>>>> update-deps-1
DateTime = "^4.3"
Pygments = "^2.7.2"
atomicwrites = "^1.4.0"
attrs = "^21.2.0"
click = "^8.0.1"
click-loguru = "^1.3.7"
colorama = "^0.4.4"
importlib-metadata = {version = "^2.0.0", python = "<3.8"}
<<<<<<< HEAD
numpy = "^1.19.4"
scipy = "^1.7.3"
||||||| 72c6116
numpy = "^1.19.4"
scipy = "^1.5.3"
=======
numpy = "^1.22.1"
scipy = "^1.7.3"
>>>>>>> update-deps-1
sly = "^0.4"
tomlkit = "^0.7.0"
tqdm = "^4.55.1"
mkl-devel = "2021.1.1"  # TODO: dvp mkl-2021.2.0 is not linkable under Linux and Mac - the libraries have '1' in names
mkl = "2021.1.1"
mkl-include = "2021.1.1"
python-dotenv = "^0.19.0"
ply = "^3.11"
tbb = "^2021.5.1"        # TODO: dvp tbb-2021.5.0 doesn't have Linux wheels on PyPI

[tool.poetry.dev-dependencies]
Pygments = "^2.7.2"
Sphinx = "^4.2.0"
#black = {version = "*", allow-prereleases = true}
black = "^22.1.0"
codecov = "^2.1.10"
darglint = "^1.5.5"
flake8 = "^4.0.1"
flake8-annotations = "^2.4.1"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.4"
flake8-bugbear = "^22.1.11"
flake8-docstrings = "^1.5.0"
flake8-import-order = "^0.18.1"
mypy = "^0.931"
nox = "^2021.6.12"
numpydoc = "^1.1.0"
pre-commit = "^2.17.0"
pytest = "^6.2"
pytest-benchmark = "^3.2.3"
pytest-cov = "^3.0.0"
pytest-mock = "^3.7.0"
safety = "^1.10.1"
sphinx-autodoc-typehints = "^1.16.0"
sphinx-autorun = "^1.1.1"
sphinx-rtd-theme = "^1.0.0"
sphinxcontrib-napoleon = "^0.7"
xdoctest = "^0.15.0"
wheel = "^0.35.1"
sphinx-autobuild = "^2021.3.14"
cmake = "^3.22.2"
rstcheck = "^3.3.1"
isort = "^5.7.0"
yappi = "^1.3.2"
coverage = {version = "^6.3", extras = ["toml"]}

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
    "poetry-core>=1.0.7",
    "setuptools>=43.0",
    "wheel",
    "cmake",
    "numpy",
    "mkl-devel",
]

[tool.poetry.scripts]
mckit = "mckit.cli.runner:mckit"

[tool.coverage.paths]
source = ["mckit", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["mckit"]
omit = ["*_tab.py"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
ignore_errors = true
sort = "Cover"
# fail_under = 100  # So far, this is just a dream.

[tool.poetry.urls]
"Repository" = "https://github.com/rorni/mckit"
"Bug Tracker" = "https://github.com/rorni/mckit/issues"
# "Documentation" TODO


[tool.isort]
atomic = true
ensure_newline_before_comments = true
known_first_party = "mckit"
known_typing = "typing,types,typing_extensions,mypy,mypy_extensions"
sections = "FUTURE,TYPING,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
default_section = "FIRSTPARTY"
use_parentheses = true
multi_line_output = 3
line_length = 88
include_trailing_comma = true
lines_between_types = 1
<<<<<<< HEAD
# skip = [ "setup-generated.py", "setup-bak.py" ]
skip_gitignore = true
extend_skip_glob = [
    "adhoc/*", "scripts/*", "3rd-party/*",
    "setup-*.py",
    "build-example.py",
    "setup-bak.py"
]
||||||| 72c6116
skip = [ "setup-generated.py" ]
skip_glob = [ "*-example.py" ]
=======
skip = [ "setup-generated.py", "setup-bak.py" ]
skip_glob = [ "*-example.py" ]
>>>>>>> update-deps-1


# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
line-length = 88
target-version = ['py38']
include = '''
(
    \.pyi?$
)
'''
exclude = '''
(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.nox
  | \.venv
  | _build
  | build
  | build_configs
  | dist
  | 3rd-party
  | data
  | htmlcov
  | mckit\.egg-info
  | _tab.py$
  | notebooks
  | tutorial
  | wrk
)
'''
