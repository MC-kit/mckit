name: TestPyPI

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - master
jobs:
  build_wheels:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9']
        exclude:
          - os: windows-latest
            python-version: 3.7   # py37 on Windows takes too much, and it wants nlopt.dll
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.python-version}}
        architecture: x64
    - run: pip install poetry==1.1.4
    - run: >-
        poetry version patch &&
        version=$(poetry version | awk '{print $2}') &&
        poetry version $version.dev.$(date +%s)
    - name: Checkout submodules
      run: git submodule update --init --recursive --depth=1
    # - run: nox -s tests -p ${{ matrix.python-version }}
    - run: poetry install --no-dev
    - run: poetry build
    - uses: actions/upload-artifact@v2
      with:
        name: "wheels"
        path: dist/*.whl
  publish_wheels:  
    name: "Publishing wheels"
    runs-on: "${{ ubuntu-latest }}"
    steps:    
    - uses: actions/checkout@v2
   # - run: pip install poetry==1.1.4
    - uses: actions/download-artifact@v2
      with:
        name: "wheels"
        path: dist/
    - name: GitHub Release wheels (deploy)
      if: (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags'))
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
        repository_url: https://test.pypi.org/legacy/ 
        packages_dir: ./dist/
#    - run: poetry config repositories.testpypi https://test.pypi.org/legacy/
#    - run: poetry publish -r testpypi -u __token__ -p ${{ secrets.TEST_PYPI_TOKEN }}
