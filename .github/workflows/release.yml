name: Release

on:
  push:
    branches:
      - main
      - master

jobs:

  qa:
    name: "Code quality check: last attempt before release"
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: x64

      - name: Checkout submodules
        run: git submodule update --init --recursive --depth=1

      - name: Install poetry
        run: |
          python -m ensurepip
          python -m pip install -U pip
          pip install --constraint=.github/workflows/constraints.txt poetry

      - name: Install nox and nox-poetry
        run: pip install --constraint=.github/workflows/constraints.txt nox nox-poetry

#      - name: Install self
#        run: |
#          poetry build
#          poetry install
#
      - name: Run tests
        run: nox  -s tests --no-color --python 3.10

  release:
    name: Release
    needs: qa
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2    # need previous revision to define tag

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install poetry
        run: |
          pip install --constraint=.github/workflows/constraints.txt poetry
          poetry --version

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2
        with:
          version-command: echo "${$(poetry version --short)%-*}"

#      - name: Bump version for developmental release
#        if: "! steps.check-version.outputs.tag"
#        run: |
#          poetry version patch &&
#          version=$(poetry version --short) &&
#          poetry version $version.dev.$(date +%s)

#      - name: Install dependencies before build
#        run: |
#          poetry install --no-dev
#
#      - name: Build package
#        run: |
#          poetry build --ansi

#      - name: Publish package on PyPI
#        if: steps.check-version.outputs.tag
#        uses: pypa/gh-action-pypi-publish@v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_TOKEN }}
#
#      - name: Publish package on TestPyPI
#        if: "! steps.check-version.outputs.tag"
#        uses: pypa/gh-action-pypi-publish@v1
#        with:
#          user: __token__
#          password: ${{ secrets.TEST_PYPI_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v5
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.MCKIT_GITHUB_TOKEN }}
