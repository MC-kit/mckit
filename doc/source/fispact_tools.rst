.. _fispact_interface_devel

Проблема
========

FISPACT может проводить расчеты за один раз только для одного материала и одного
спектра. Поэтому необходимо автоматизировать этот процесс для получения 
результатов для пространственных сеток. Пространственная сетка имеет 3 измерения
ijk. В каждом вокселе сетки может содержаться несколько ячеек, содержищих 
материал, или воксель может быть заполнен исключительно пустыми ячейками. 
Для каждого вокселя сетки известен спектр нейтронов (как правило 175 групп). 

Для каждого вокселя, для каждой ячейки с материалом в нем необходимо запустить 
FISPACT и рассчитать эволюцию какой-то величины (спектра гамма-излучения, 
активности изотопов, количества изотопов) во времени. В результате данные 
получаются многомерными и существенно разреженными. 

Другой подход - метод суперпозиции. В нем FISPACT запускается для каждой 
энергетической группы нейтронов и для каждого материала. Затем эти результаты
комбинируются для каждого вокселя сетки и для каждой ячейки с соответствующим
весом. Эта процедура оказывается требовательной к ресурсам, и существенно 
влияет на производительность (в реализации на Python), хотя запусков FISPACT
требуется существенно меньше.

Решение
=======

Чтобы существенно повысить производительность лучше использовать операции с 
объектами numpy.ndarray. Это обычно позволяет производить вычисления за разумное
время. Но данный класс не поддерживает разреженные матрицы. Более того, scipy
поддерживает только двумерные разреженные матрицы. 

Многомерность и разреженность
-----------------------------

Почти все исходные данные и результаты зависят от четырех координат: 
3 пространственных (i, j, k), и ячейка c. Причем размерность по ячейкам является
существенно разреженной. Поэтому перенумеруем все воксели, которые содержат 
хотя бы одну ячейку с материалом, и ячейки в них. Т.е. каждой комбинации 
индексов ijkc, соответствующей непустым данным, ставим в соответствие номер n.
Тогда объемы каждой ячейки в каждом вокселе становятся вектором :math:`V_n`.
Аналогично материалы в каждом вокселе становятся вектором :math:`M_n`. 
А нейтронные потоки - матрицей :math:`F_{nf}`.

Результаты расчетов
-------------------

Результаты, выдаваемые FISPACT зависят от времени, и путь есть T временных 
точек. Есть три типа результатов, которые выдает FISPACT:

1. Скалярные величины, такие как альфа-, бета-, гамма-активность, число 
   нейтронов деления. Т.к. они зависят от времени, то результатом будет вектор,
   длины T.
   
2. Спектры гамма-излучения. Есть E энергетических групп фотонов. Таким образом,
   результатом будет матрица TxE.
   
3. Концентрации/активности/и пр. величины изотопов. Если ихотопы перенумеровать,
   то это тоже будет матрица размера TxS.
   
Таким образом, результатом расчетов в сетке будет либо двумерная матрица 
размером TxN для скалярных величин, либо трехмерная, размером TxNxE. 

Перед расчетом есть данные: :math:`V_n`, :math:`M_n`, :math:`F_{nf}`.
В результате имеем данные: :math:`G_{tne}`, :math:`I_{tns}`, :math:`A_{tn}`.

Строгий расчетов
----------------

В этом варианте расчета действия максимально прямолинейны. Для каждого элемента
:math:`n` запускаем расчет FISPACT. Сохраняем соответствующий результат. 

Недостатком этого метода является большое время расчета для очень больших сеток.

Метод суперпозиции
------------------

Расчет FISPACT производится только для каждого материала и для каждой 
энергетической группы. В качестве объема материала выбирается максимальный 
объем. В качестве плотности потока выбирается максимальный для данного бина:

.. math::
    F_0&=\max_n{F_{nf}}\\
    V_0&=\max_n{V_n}
    
В результате расчетов (после объединения результатов по материалам и энергиям)
обобщенно есть тензор :math:`D_{tmef}`. Четыре координаты - по времени, по
материалам, по энергии фотонов (или элементам), по энергии нейтронов. 
